kumofsとは？

kumofs（クモエフエス）は、実用性を重視した分散データストアです。レプリケーション機能を備え、一部のサーバーに障害が発生しても動作し続けます。単体でも高い性能を持ちながら、サーバーを追加することで読み・書き両方の性能が向上する特徴を持ち、低コストで極めて高速なストレージシステムを構築・運用できます。


kumofsの大きな特徴は、システムの構成の簡単に変更できる点です。システムを止めることなく、簡単な手順でサーバーを追加したり復旧したりできます。アプリケーションには一切影響を与えません。

またkumofsは、広く利用されている分散キャッシュシステムの「memcached」と互換性のあるプロトコルを実装しています。多くのプログラミング言語向けに提供されているクライアントライブラリを使って、簡単にアプリケーションから利用することができます。


今日発売の『Software Design』では、kumofsのアーキテクチャや使い方について紹介しました。

kumofs は、サーバーの「数」を増やし ていくことで性能を高めていく、いわゆる「スケール アウト」が可能なシステムです。
もちろん、単に数を集めるだけでは役に立ちません。 サーバー同士が相互に通信しながら、連携して動作する必要があります。
そこで本章では、kumofsではどのようにして高いスケーラビリティを実現しているのかについて解説します。
このほかに Software Design 2月号では、kumofs以外のKey-Value Storeの特性や、技術的に突っ込んだ内容も分かりやすくまとめられているので、オススメです。mixiやGREEなど、実際のWebサービスでのKey-Value Storeの運用事例も紹介されています。


kumofsのアーキテクチャ

kumofsは、サーバー同士が直接通信士合うP2P型のモデルに加えて、全体を統括する管理サーバーを組み合わせた、ハイブリッド型の設計を採用しています。kumofsのクラスタは、以下の３種類のプログラムで構成されます：

kumo-manager
全体の統括を行う管理サーバー。２台で冗長化構成をとることが可能。
kumo-server
実際にデータを保存するサーバー。レプリケーションも行う。
kumo-gateway
アプリケーションとkumo-serverの間を取り持つプログラム。アプリケーションを動かすサーバー上で１つずつ動かしておく。
kumo-gatewayは、memcachedと互換性のあるプロトコルを実装しています。このためアプリケーションからは「localhostで動作しているmemcachedサーバー」のように見えます。

これはサーバーの構成をいくら変更しても変わらないので、kumofsをアプリケーションから分離して管理やすくなります。